# example from https://github.com/marketplace/actions/install-poetry-action#testing
name: build pdfs

on: push

jobs:
  build_pdf:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #              build pdfs
      #----------------------------------------------
      - name: Build PDFs
        run: |
          source .venv/bin/activate
          pip install jupyter-book pyppeteer kaleido
      - name: Make PDF of notebooks in figures_thesis
        run: |
          source .venv/bin/activate
          jb build docs/figures_thesis/ --builder pdfhtml
      - name: Make PDF of notebooks in figures_paper
        run: |
          source .venv/bin/activate
          jb build docs/figures_paper/ --builder pdfhtml
      - name: Commit pdfs 
        run: |
          mkdir -p docs/pdf
          mv docs/figures_paper/_build/pdf/book.pdf docs/pdf/figures_paper.pdf
          mv docs/figures_thesis/_build/pdf/book.pdf docs/pdf/figures_thesis.pdf
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/pdf
          git commit -m "chore: compile jupyter notebooks" -a || true
          # The above command will fail if no changes were present, so we ignore
          # the return code.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
